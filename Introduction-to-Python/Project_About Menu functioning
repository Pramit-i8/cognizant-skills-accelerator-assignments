import turtle

# Recursive function to calculate factorial
def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)

# Recursive function to find the nth Fibonacci number
def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

# Recursive function to draw a fractal tree (bonus)
def draw_fractal_tree(t, length, angle, level):
    if level <= 0:
        return
    t.forward(length)
    t.left(angle)
    draw_fractal_tree(t, length * 0.7, angle, level - 1)  # Left subtree
    t.right(angle * 2)
    draw_fractal_tree(t, length * 0.7, angle, level - 1)  # Right subtree
    t.left(angle)
    t.backward(length)

# Function to handle the menu display and input
def display_menu():
    print("Welcome to the Recursive Artistry Program!")
    print("Choose an option:")
    print("1. Calculate Factorial")
    print("2. Find Fibonacci")
    print("3. Draw a Recursive Fractal")
    print("4. Exit")

def main():
    while True:
        display_menu()
        choice = input("> ")
        
        if choice == '1':  # Factorial calculation
            try:
                num = int(input("Enter a number to find its factorial: "))
                if num < 0:
                    print("Please enter a positive integer.")
                    continue
                result = factorial(num)
                print(f"The factorial of {num} is {result}.")
            except ValueError:
                print("Invalid input! Please enter a valid number.")
        
        elif choice == '2':  # Fibonacci calculation
            try:
                n = int(input("Enter the position of the Fibonacci number: "))
                if n < 0:
                    print("Please enter a positive integer.")
                    continue
                result = fibonacci(n)
                print(f"The {n}th Fibonacci number is {result}.")
            except ValueError:
                print("Invalid input! Please enter a valid number.")
        
        elif choice == '3':  # Draw a recursive fractal pattern
            print("Drawing a recursive fractal tree!")
            screen = turtle.Screen()
            screen.setup(width=800, height=600)
            t = turtle.Turtle()
            t.left(90)
            t.speed(0)
            draw_fractal_tree(t, 100, 30, 10)  # Starting with 100 length, 30 angle, and 10 levels
            turtle.done()
        
        elif choice == '4':  # Exit
            print("Goodbye!")
            break
        
        else:
            print("Invalid choice. Please select a valid option.")

if __name__ == "__main__":
    main()
